#!/usr/bin/env python
import json
import logging
import time
from argparse import ArgumentParser
from videowall.networking import NetworkingServer
from videowall.networking.message_definition import BroadcastMessage, ClientConfig

if __name__ == '__main__':
    parser = ArgumentParser()

    parser.add_argument('--filename', default='file.mp4')
    parser.add_argument('--player_ip', default='127.0.0.1')
    parser.add_argument('--player_port', type=int, default=11111)
    parser.add_argument('--broadcast_port', type=int, default=2000)
    parser.add_argument('--broadcast_interval', type=float, default=1.0)
    parser.add_argument('--client_seek_lookahead', type=int, default=5000000000)
    parser.add_argument('--client_seek_grace_time', type=int, default=500000000)
    parser.add_argument('--client_config', type=json.loads, default='{}')

    args = parser.parse_args()

    logging.getLogger().setLevel(logging.DEBUG)

    logging.info("Client config: %s", args.client_config)

    server = NetworkingServer(args.broadcast_port)
    while True:
        server.send_broadcast(BroadcastMessage(
            filename=args.filename,
            base_time=int(time.time() / 1e-9),
            position=0,
            seek_grace_time=args.client_seek_grace_time,
            seek_lookahead=args.client_seek_lookahead,
            duration=0,
            player_ip=args.player_ip,
            player_port=args.player_port,
            client_config={ip: ClientConfig(**cfg) for ip, cfg in args.client_config.iteritems()}
        ))
        time.sleep(args.broadcast_interval)
